name: Deploy to Amazon ECS

on:
  push:
    branches: ["master"]

env:
  AWS_ACCOUNT_ID: ${{ vars.AWS_ACCOUNT_ID }}
  AWS_REGION: eu-north-1
  ECS_CLUSTER: SimpleCluster
  APP_NAME: blackjack

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'pull_request' && github.base_ref || github.ref_name }}
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Set Env Variables
      run: |
        echo "ECR_REPOSITORY=repo-${{ env.APP_NAME }}" >> $GITHUB_ENV
        echo "ECS_SERVICE=service-${{ env.APP_NAME }}" >> $GITHUB_ENV
        echo "ECS_TASK_NAME=task-${{ env.APP_NAME }}" >> $GITHUB_ENV
        echo "CONTAINER_NAME=container-${{ env.APP_NAME }}" >> $GITHUB_ENV
        echo "IAM_ROLE_NAME=${{ env.APP_NAME }}-deploy-role" >> $GITHUB_ENV

    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials (OIDC)
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.IAM_ROLE_NAME }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: arn:aws:ecs:${{ env.AWS_REGION }}:${{ env.AWS_ACCOUNT_ID }}:task-definition/${{ env.ECS_TASK_NAME }}
        container-name: ${{ env.CONTAINER_NAME }}
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: ${{ env.ECS_SERVICE }}
        cluster: ${{ env.ECS_CLUSTER }}
        wait-for-service-stability: true